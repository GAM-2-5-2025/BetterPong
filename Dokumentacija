1. Uvod
Bricks Breaker Game je klasična arkadna igra inspirirana popularnim igrama iz osamdesetih i devedesetih godina prošlog stoljeća. U igri igrač upravlja platformom smještenom na dnu ekrana i koristi je za odbijanje loptice prema nizu cigli smještenih na vrhu. Cilj je razbiti sve cigle prije nego što loptica padne ispod platforme.

Ovaj projekt razvijen je kao školski zadatak na [ime škole] u sklopu nastavnog predmeta [naziv predmeta, npr. Informatika ili Programiranje]. Autori projekta su [ime i prezime], učenici [razred]. Tijekom razvoja projekta fokus je bio na razumijevanju osnova programiranja, računalne grafike i interaktivnog dizajna, kao i na primjeni stečenih znanja kroz stvaranje funkcionalne i zabavne igre.

Osim što je igra namijenjena zabavi, ona razvija reflekse, koordinaciju oko-ruka te sposobnost donošenja brzih odluka, što je korisno u raznim područjima života i rada.

2. Detaljan opis rada
Osnovna ideja i koncept igre
Igra je jednostavna i intuitivna, a sastoji se od tri osnovna elementa:

Platforma: Igrač ju može pomicati lijevo i desno kako bi odbio lopticu.

Loptica: Stalno se kreće po ekranu i odbija od platforme, zidova i cigli.

Cigle: Postavljene su u mrežu na vrhu ekrana. Svaka cigla ima određenu vrijednost i nestaje kada ju loptica pogodi.

Kako igra funkcionira?
Igra započinje s početnim ekranom koji prikazuje naslov i opciju za pokretanje igre. Nakon što igrač započne igru, na ekranu se pojavljuje platforma koja se pomiče pomoću strelica na tipkovnici (lijevo i desno). Loptica kreće iz centra platforme pod određenim kutom.

Loptica se odbija od zidova igre i platforme, a kada udari u ciglu, cigla se uništava, a igrač dobiva bodove. Svaka razbijena cigla povećava rezultat, koji je prikazan u gornjem kutu ekrana.

Ako loptica padne ispod platforme, igra se završava i prikazuje se ekran s konačnim rezultatom te opcijom za ponovno pokretanje igre.

Ilustracija funkcionalnih dijelova:
Početni ekran:

Prikazuje naziv igre i gumb za početak igre.

Igra u tijeku:

Vidljiva je platforma, loptica i cigle različitih boja.

Bodovni prikaz:

U gornjem desnom kutu ekrana prikazuju se trenutačni bodovi.

Kraj igre:

Prikazuje poruku „Igra je završena!“ i konačni rezultat, uz mogućnost ponovnog pokretanja.

3. Tehničke informacije
Tehnologije korištene u izradi igre
Igra je razvijena koristeći programski jezik JavaScript s tehnologijom HTML5 Canvas za prikaz grafike. Izbor JavaScripta omogućava jednostavnu distribuciju igre putem interneta i pokretanje igre u bilo kojem modernom web pregledniku bez potrebe za dodatnom instalacijom.

Za razvoj je korišten editor Visual Studio Code, a za testiranje su korišteni preglednici Google Chrome i Mozilla Firefox.

Sistemskih zahtjevi
Igra je vrlo lagana i ne zahtijeva posebnu hardversku konfiguraciju. Potrebno je imati:

Operativni sustav: Windows, macOS ili Linux

Web preglednik (Chrome, Firefox, Edge, Safari) u najnovijoj verziji

Minimalna rezolucija zaslona: 800x600 piksela

Opis arhitekture koda
Kod je organiziran u tri glavne cjeline:

Logika igre – upravlja pomicanjem platforme i loptice, detekcijom sudara s ciglama i zidovima, te sustavom bodovanja.

Grafički prikaz – koristi Canvas API za crtanje platforme, loptice i cigli te prikaz teksta.

Korisničko sučelje – uključuje početni ekran, ekran igre i ekran za kraj igre, kao i obradu korisničkih unosa putem tipkovnice.

Svaki od ovih modula je jasno razdvojen i komentiran unutar izvornog koda, što omogućava jednostavno održavanje i nadogradnju igre.

Problemi i izazovi tijekom razvoja
Jedan od većih izazova bio je precizno upravljanje sudarima loptice s ciglama i platformom, kako bi odbijanje bilo prirodno i predvidivo. Također, optimizacija igre za glatko izvođenje na različitim uređajima zahtijevala je detaljno testiranje i podešavanje brzine animacije.

4. Zaključak
Projekt Bricks Breaker Game predstavlja uspješan spoj programiranja i dizajna, te je realiziran kao funkcionalna igra koja može poslužiti kao dobra osnova za daljnje razvojne projekte. Igra je jednostavna, zabavna i izazovna, te pruža korisnicima mogućnost testiranja svojih vještina i reakcija.

Planovi za daljnji razvoj uključuju dodavanje novih razina, power-up elemenata, poboljšanih zvučnih efekata te moguće implementacije u druge programske jezike ili okvire.




